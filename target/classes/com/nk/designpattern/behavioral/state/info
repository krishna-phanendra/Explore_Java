In State pattern a class behavior changes based on its state. This type of design pattern comes 
under behavior pattern.

In State pattern, we create objects which represent various states and a context object 
whose behavior varies as its state object changes.

Implementation
We are going to create a State interface defining an action and concrete state classes implementing 
the State interface. Context is a class which carries a State.

Benefits:
It keeps the state-specific behavior.
It makes any state transitions explicit.

Usage:
When the behavior of object depends on its state and it must be able to change its behavior at 
runtime according to the new state.
It is used when the operations have large, multipart conditional statements that depend on the state of an object.